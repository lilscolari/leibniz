Leibniz {
  Program = Statement+
  
  Statement = VarDec | Assignment | PrintStmt | FunctionCall
  
  VarDec = "let" id (":" Type)? "=" Exp ";"
  Assignment = id "=" Exp ";"
  PrintStmt = "print" "(" Exp ")" ";"
  
  FunctionCall = id "(" ExpList? ")"
  ExpList = Exp ("," Exp)*

  Exp = Exp "+" Exp  -- add
      | integerLiteral
      | floatLiteral
      | stringlit
      | boolean
      | id
      | FunctionCall

  Type = "int" | "float" | "boolean" | "string"
  
  integerLiteral = digit+
  floatLiteral = digit+ "." digit+
  stringlit = "\"" (~"\"" any)* "\""
  boolean = "true" | "false"
  id = letter (letter | digit)*
}
