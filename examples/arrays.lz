fnc greater_than_2(i: integer): boolean = {
    if i > 2 {
        return true;
    }
    return false;
}

fnc multiply_by_2(i: integer): integer = {
    return i * 2;
}

let test: integer[] = [1, 2, 3, 4, 5, 6, 7];

let filtered: integer[] = test.filter(x: integer => greater_than_2);
let mapped: integer[] = test.map(x: integer => multiply_by_2);
let filtered2: integer[] = test.filter(greater_than_2);

print(filtered);
print(mapped);
print(filtered2);

let x: integer[] = [3, 2, 1, 10, 4, 3, 6];

print(sort(x));
print(mean(x));
print(median(x));
print(mode(x));
print(min(x));
print(max(x));
print(prod(x));
print(sum(x));
print(std(x));
print(variance(x));

let sorted: integer[] = sort(x);

for x in domain(#sorted) {
    sorted[x] = 1;
    print(sorted[x]);
}

print(sorted);

sorted[3] = 10;

print(sorted[5] * 3);

print(sorted);