// 8. String to Integer (atoi)

// Implement the a_to_i(string s) function, which converts a string to a 32-bit signed integer.

// The algorithm for a_to_i(string s) is as follows:

// Whitespace: Ignore any leading whitespace (" ").
// Signedness: Determine the sign by checking if the next character is '-' or '+', assuming positivity if neither present.
// Conversion: Read the integer by skipping leading zeros until a non-digit character is encountered or the end of the string is reached. If no digits were read, then the result is 0.
// Rounding: If the integer is out of the 32-bit signed integer range [-231, 231 - 1], then round the integer to remain in the range. Specifically, integers less than -231 should be rounded to -231, and integers greater than 231 - 1 should be rounded to 231 - 1.
// Return the integer as the final result.

fnc char_to_digit(c: string): integer = {
    if c == "0" { return 0; }
    if c == "1" { return 1; }
    if c == "2" { return 2; }
    if c == "3" { return 3; }
    if c == "4" { return 4; }
    if c == "5" { return 5; }
    if c == "6" { return 6; }
    if c == "7" { return 7; }
    if c == "8" { return 8; }
    if c == "9" { return 9; }
    return -1;
}

fnc a_to_i(s: string): integer = {
    let i: integer = 0;
    let n: integer = #s;
    let sign: integer = 1;
    let result: integer = 0;

    while i < n {
        if s[i] != " " {
            break;
        }
        i = i + 1;
    }

    if i < n {
        if s[i] == "-" {
            sign = -1;
            i = i + 1;
        } else {
            if s[i] == "+" {
                i = i + 1;
            }
        }
    }

    while i < n {
        let digit: integer = char_to_digit(s[i]);
        if digit < 0 {
            break;
        }

        result = result * 10 + digit;
        i = i + 1;
    }

    result = result * sign;

    if result < -2147483648 {
        return -2147483648;
    }
    if result > 2147483647 {
        return 2147483647;
    }

    return result;
}

print(a_to_i("42"));
print(a_to_i("   -42"));
print(a_to_i("4193 with words"));
print(a_to_i("words and 987"));
print(a_to_i("-91283472332"));
